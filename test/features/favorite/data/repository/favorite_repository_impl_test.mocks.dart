// Mocks generated by Mockito 5.4.4 from annotations
// in hotel_booking/test/features/favorite/data/repository/favorite_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:hive/hive.dart' as _i2;
import 'package:hotel_booking/features/favorite/data/datasource/local_data_source.dart'
    as _i3;
import 'package:hotel_booking/features/favorite/data/model/hotel_favorite.dart'
    as _i4;
import 'package:hotel_booking/features/hotels/data/models/hotel_model.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBox_0<E> extends _i1.SmartFake implements _i2.Box<E> {
  _FakeBox_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i3.LocalDataSource {
  @override
  _i2.Box<_i4.HotelFavorite> get favoriteBox => (super.noSuchMethod(
        Invocation.getter(#favoriteBox),
        returnValue: _FakeBox_0<_i4.HotelFavorite>(
          this,
          Invocation.getter(#favoriteBox),
        ),
        returnValueForMissingStub: _FakeBox_0<_i4.HotelFavorite>(
          this,
          Invocation.getter(#favoriteBox),
        ),
      ) as _i2.Box<_i4.HotelFavorite>);

  @override
  _i5.Future<void> addFavorite(_i6.HotelModel? hotel) => (super.noSuchMethod(
        Invocation.method(
          #addFavorite,
          [hotel],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  List<_i4.HotelFavorite> getFavorites() => (super.noSuchMethod(
        Invocation.method(
          #getFavorites,
          [],
        ),
        returnValue: <_i4.HotelFavorite>[],
        returnValueForMissingStub: <_i4.HotelFavorite>[],
      ) as List<_i4.HotelFavorite>);

  @override
  _i5.Future<void> removeFavorite(String? hotelId) => (super.noSuchMethod(
        Invocation.method(
          #removeFavorite,
          [hotelId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i4.HotelFavorite>> watchFavorites() => (super.noSuchMethod(
        Invocation.method(
          #watchFavorites,
          [],
        ),
        returnValue: _i5.Stream<List<_i4.HotelFavorite>>.empty(),
        returnValueForMissingStub: _i5.Stream<List<_i4.HotelFavorite>>.empty(),
      ) as _i5.Stream<List<_i4.HotelFavorite>>);
}
